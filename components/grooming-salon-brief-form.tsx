"use client"

import { useState, useEffect, type ChangeEvent, type FormEvent } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Checkbox } from "@/components/ui/checkbox"
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group"
import { Label } from "@/components/ui/label"
import { Button } from "@/components/ui/button"
import { Loader2, CheckCircle, Upload, X } from "lucide-react"
import type { Language } from "@/lib/i18n"
import { cn } from "@/lib/utils"

interface GroomingSalonBriefFormProps {
  language: Language
  t: (key: string) => string
}

interface FormData {
  // 1. –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  contactName: string
  contactPhone: string
  contactEmail: string
  
  // 2. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–ª–æ–Ω–µ
  salonName: string
  salonAddress: string
  salonWebsite: string
  
  // 3. –ß—Ç–æ –Ω—É–∂–Ω–æ –æ—Ç –Ω–∞—Å
  services: string[]
  otherService: string
  
  // 4. –ö–ª–∏–µ–Ω—Ç—ã
  clientsDescription: string
  
  // 5. –ü—Ä–æ–±–ª–µ–º—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
  clientProblems: string
  
  // 6. –í–æ–∑—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
  clientObjections: string
  
  // 7. –ì–µ–æ–≥—Ä–∞—Ñ–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
  clientGeography: string
  otherGeography: string
  
  // 8. –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã
  competitors: string
  
  // 9. –°—Ä–æ–∫–∏ –Ω–∞—á–∞–ª–∞
  startDate: string
  
  // 10. –ë—é–¥–∂–µ—Ç
  budget: string
  
  // 11. –Ø–∑—ã–∫ —Ä–µ–∫–ª–∞–º—ã
  advertisingLanguage: string
  otherLanguage: string
  
  // 12. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ
  additionalInfo: string
}

const initialFormData: FormData = {
  contactName: "",
  contactPhone: "",
  contactEmail: "",
  salonName: "",
  salonAddress: "",
  salonWebsite: "",
  services: [],
  otherService: "",
  clientsDescription: "",
  clientProblems: "",
  clientObjections: "",
  clientGeography: "",
  otherGeography: "",
  competitors: "",
  startDate: "",
  budget: "",
  advertisingLanguage: "",
  otherLanguage: "",
  additionalInfo: "",
}

export default function GroomingSalonBriefForm({ language, t }: GroomingSalonBriefFormProps) {
  const [formData, setFormData] = useState<FormData>(initialFormData)
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [submissionStatus, setSubmissionStatus] = useState<"success" | "error" | null>(null)
  const [errorMessage, setErrorMessage] = useState<string | null>(null)

  // Load from localStorage on mount
  useEffect(() => {
    const savedData = localStorage.getItem("groomingSalonBriefForm")
    if (savedData) {
      try {
        const parsedData = JSON.parse(savedData)
        setFormData({ ...initialFormData, ...parsedData })
      } catch (error) {
        console.error("Error loading saved form data:", error)
      }
    }
  }, [])

  // Save to localStorage on data change
  useEffect(() => {
    localStorage.setItem("groomingSalonBriefForm", JSON.stringify(formData))
  }, [formData])

  const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }))
  }

  const handleCheckboxChange = (name: keyof FormData, value: string) => {
    setFormData((prev) => {
      const currentArray = prev[name] as string[]
      if (currentArray.includes(value)) {
        return { ...prev, [name]: currentArray.filter((item) => item !== value) }
      } else {
        return { ...prev, [name]: [...currentArray, value] }
      }
    })
  }

  const handleRadioChange = (name: keyof FormData, value: string) => {
    setFormData((prev) => ({ ...prev, [name]: value }))
  }

  const handleSubmit = async (e: FormEvent) => {
    e.preventDefault()
    setSubmissionStatus(null)
    setErrorMessage(null)
    setIsSubmitting(true)

    try {
      const response = await fetch("/api/send-grooming-salon-brief", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      })

      if (response.ok) {
        setSubmissionStatus("success")
        setFormData(initialFormData)
        localStorage.removeItem("groomingSalonBriefForm")
      } else {
        const errorData = await response.json()
        setErrorMessage(errorData.error || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã")
        setSubmissionStatus("error")
      }
    } catch (error) {
      console.error("Submission error:", error)
      setErrorMessage("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.")
      setSubmissionStatus("error")
    } finally {
      setIsSubmitting(false)
    }
  }

  if (submissionStatus === "success") {
    return (
      <div className="flex flex-col items-center justify-center min-h-[50vh] text-center">
        <CheckCircle className="w-24 h-24 text-green-500 mb-6" />
        <h2 className="text-3xl font-bold text-slate-900 mb-4">–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É!</h2>
        <p className="text-lg text-slate-600 mb-8">
          –í–∞—à –±—Ä–∏—Ñ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.
        </p>
        <Button onClick={() => setSubmissionStatus(null)} className="bg-amber-500 hover:bg-amber-600 text-white">
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–∏–Ω –±—Ä–∏—Ñ
        </Button>
      </div>
    )
  }

  return (
    <div className="max-w-4xl mx-auto">
      <div className="mb-8 text-center">
        <h2 className="text-2xl font-bold text-slate-900 mb-2">üìã –ë—Ä–∏—Ñ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–µ–∫–ª–∞–º—ã –≥—Ä—É–º–∏–Ω–≥-—Å–∞–ª–æ–Ω–∞ (–ü–æ–ª—å—à–∞)</h2>
      </div>

      <form onSubmit={handleSubmit} className="space-y-8">
        {errorMessage && (
          <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
            <strong className="font-bold">–û—à–∏–±–∫–∞: </strong>
            <span className="block sm:inline">{errorMessage}</span>
            <button
              type="button"
              className="absolute top-0 bottom-0 right-0 px-4 py-3"
              onClick={() => setErrorMessage(null)}
            >
              <X className="w-4 h-4" />
            </button>
          </div>
        )}

        {/* 1. –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
        <Card className="shadow-lg border-t-4 border-blue-500">
          <CardHeader>
            <CardTitle className="text-2xl font-bold text-slate-900">1. –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <Label htmlFor="contactName" className="text-base font-medium">
                  –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è
                </Label>
                <Input
                  id="contactName"
                  name="contactName"
                  value={formData.contactName}
                  onChange={handleChange}
                  placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                  required
                />
              </div>
              <div>
                <Label htmlFor="contactPhone" className="text-base font-medium">
                  –¢–µ–ª–µ—Ñ–æ–Ω
                </Label>
                <Input
                  id="contactPhone"
                  name="contactPhone"
                  type="tel"
                  value={formData.contactPhone}
                  onChange={handleChange}
                  placeholder="+48 123 456 789"
                  required
                />
              </div>
            </div>
            <div>
              <Label htmlFor="contactEmail" className="text-base font-medium">
                Email
              </Label>
              <Input
                id="contactEmail"
                name="contactEmail"
                type="email"
                value={formData.contactEmail}
                onChange={handleChange}
                placeholder="ivan@example.com"
                required
              />
            </div>
          </CardContent>
        </Card>

        {/* 2. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–ª–æ–Ω–µ */}
        <Card className="shadow-lg border-t-4 border-amber-500">
          <CardHeader>
            <CardTitle className="text-2xl font-bold text-slate-900">2. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–ª–æ–Ω–µ</CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div>
              <Label htmlFor="salonName" className="text-base font-medium">
                –ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–ª–æ–Ω–∞
              </Label>
              <Input
                id="salonName"
                name="salonName"
                value={formData.salonName}
                onChange={handleChange}
                placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ —Å–∞–ª–æ–Ω–∞"
                required
              />
            </div>
            <div>
              <Label htmlFor="salonAddress" className="text-base font-medium">
                –ê–¥—Ä–µ—Å
              </Label>
              <Input
                id="salonAddress"
                name="salonAddress"
                value={formData.salonAddress}
                onChange={handleChange}
                placeholder="–£–ª–∏—Ü–∞, –Ω–æ–º–µ—Ä, –≥–æ—Ä–æ–¥"
                required
              />
            </div>
            <div>
              <Label htmlFor="salonWebsite" className="text-base font-medium">
                –°–∞–π—Ç –∏–ª–∏ —Å–æ—Ü—Å–µ—Ç–∏
              </Label>
              <Input
                id="salonWebsite"
                name="salonWebsite"
                value={formData.salonWebsite}
                onChange={handleChange}
                placeholder="www.example.com –∏–ª–∏ @instagram"
              />
            </div>
          </CardContent>
        </Card>

        {/* 3. –ß—Ç–æ –Ω—É–∂–Ω–æ –æ—Ç –Ω–∞—Å */}
        <Card className="shadow-lg border-t-4 border-purple-500">
          <CardHeader>
            <CardTitle className="text-2xl font-bold text-slate-900">3. –ß—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ –æ—Ç –Ω–∞—Å?</CardTitle>
            <p className="text-slate-600">–û—Ç–º–µ—Ç—å—Ç–µ, —á—Ç–æ –¥–ª—è –≤–∞—Å –∞–∫—Ç—É–∞–ª—å–Ω–æ:</p>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
              <div className="flex items-center space-x-2">
                <Checkbox
                  id="serviceFacebook"
                  checked={formData.services.includes("Facebook")}
                  onCheckedChange={(checked) => handleCheckboxChange("services", "Facebook")}
                />
                <Label htmlFor="serviceFacebook">–†–µ–∫–ª–∞–º–∞ –≤ Facebook</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox
                  id="serviceInstagram"
                  checked={formData.services.includes("Instagram")}
                  onCheckedChange={(checked) => handleCheckboxChange("services", "Instagram")}
                />
                <Label htmlFor="serviceInstagram">–†–µ–∫–ª–∞–º–∞ –≤ Instagram</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox
                  id="serviceGoogle"
                  checked={formData.services.includes("Google")}
                  onCheckedChange={(checked) => handleCheckboxChange("services", "Google")}
                />
                <Label htmlFor="serviceGoogle">–†–µ–∫–ª–∞–º–∞ –≤ Google</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox
                  id="serviceChatbot"
                  checked={formData.services.includes("Chatbot")}
                  onCheckedChange={(checked) => handleCheckboxChange("services", "Chatbot")}
                />
                <Label htmlFor="serviceChatbot">–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Ç-–±–æ—Ç–∞</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox
                  id="serviceWebsite"
                  checked={formData.services.includes("Website")}
                  onCheckedChange={(checked) => handleCheckboxChange("services", "Website")}
                />
                <Label htmlFor="serviceWebsite">–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–∞</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox
                  id="serviceYouTube"
                  checked={formData.services.includes("YouTube")}
                  onCheckedChange={(checked) => handleCheckboxChange("services", "YouTube")}
                />
                <Label htmlFor="serviceYouTube">–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –≤ YouTube</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox
                  id="serviceTikTok"
                  checked={formData.services.includes("TikTok")}
                  onCheckedChange={(checked) => handleCheckboxChange("services", "TikTok")}
                />
                <Label htmlFor="serviceTikTok">–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –≤ TikTok</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox
                  id="serviceApp"
                  checked={formData.services.includes("Mobile App")}
                  onCheckedChange={(checked) => handleCheckboxChange("services", "Mobile App")}
                />
                <Label htmlFor="serviceApp">–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox
                  id="serviceOther"
                  checked={formData.services.includes("Other")}
                  onCheckedChange={(checked) => handleCheckboxChange("services", "Other")}
                />
                <Label htmlFor="serviceOther">–î—Ä—É–≥–æ–µ</Label>
              </div>
            </div>
            {formData.services.includes("Other") && (
              <Input
                name="otherService"
                value={formData.otherService}
                onChange={handleChange}
                placeholder="–£–∫–∞–∂–∏—Ç–µ —á—Ç–æ –∏–º–µ–Ω–Ω–æ"
                className="mt-2"
              />
            )}
          </CardContent>
        </Card>

        {/* 4. –ö–ª–∏–µ–Ω—Ç—ã */}
        <Card className="shadow-lg border-t-4 border-green-500">
          <CardHeader>
            <CardTitle className="text-2xl font-bold text-slate-900">4. –í–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã (–∫—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ —Å–∞–ª–æ–Ω)</CardTitle>
            <p className="text-slate-600">–û–ø–∏—à–∏—Ç–µ 2‚Äì3 –≥—Ä—É–ø–ø—ã –≤–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.</p>
            <p className="text-sm text-slate-500">‚úç –ü—Ä–∏–º–µ—Ä—ã:</p>
            <ul className="text-sm text-slate-500 list-disc list-inside space-y-1">
              <li>–ú–æ–ª–æ–¥—ã–µ –¥–µ–≤—É—à–∫–∏ —Å –º–∞–ª–µ–Ω—å–∫–∏–º–∏ —Å–æ–±–∞–∫–∞–º–∏ (–π–æ—Ä–∫–∏, —à–ø–∏—Ü, —á–∏—Ö—É–∞—Ö—É–∞).</li>
              <li>–°–µ–º—å–∏ —Å –¥–µ—Ç—å–º–∏ –∏ —Å—Ä–µ–¥–Ω–∏–º–∏ —Å–æ–±–∞–∫–∞–º–∏.</li>
              <li>–ü–æ–∂–∏–ª—ã–µ –ª—é–¥–∏ —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ —Å–ø–æ–∫–æ–π–Ω—ã–º–∏ –ø–∏—Ç–æ–º—Ü–∞–º–∏.</li>
            </ul>
            <p className="text-slate-600 mt-2">–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏:</p>
          </CardHeader>
          <CardContent>
            <Textarea
              name="clientsDescription"
              value={formData.clientsDescription}
              onChange={handleChange}
              placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤..."
              rows={6}
              required
            />
          </CardContent>
        </Card>

        {/* 5. –ü—Ä–æ–±–ª–µ–º—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ */}
        <Card className="shadow-lg border-t-4 border-red-500">
          <CardHeader>
            <CardTitle className="text-2xl font-bold text-slate-900">5. –ü—Ä–æ–±–ª–µ–º—ã –≤–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</CardTitle>
            <p className="text-slate-600">–ß—Ç–æ —á–∞—â–µ –≤—Å–µ–≥–æ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º –≤ –¥—Ä—É–≥–∏—Ö —Å–∞–ª–æ–Ω–∞—Ö?</p>
            <p className="text-sm text-slate-500">‚úç –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –±–æ–ª—å–Ω–æ —Å–æ–±–∞–∫–µ, –Ω–µ–∞–∫–∫—É—Ä–∞—Ç–Ω–æ –ø–æ—Å—Ç—Ä–∏–≥–ª–∏, –¥–æ–ª–≥–æ –∂–¥–∞–ª–∏, –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–π –∑–∞–ø–∞—Ö –∏ —Ç.–¥.):</p>
          </CardHeader>
          <CardContent>
            <Textarea
              name="clientProblems"
              value={formData.clientProblems}
              onChange={handleChange}
              placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –∫–ª–∏–µ–Ω—Ç–æ–≤..."
              rows={4}
              required
            />
          </CardContent>
        </Card>

        {/* 6. –í–æ–∑—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ */}
        <Card className="shadow-lg border-t-4 border-orange-500">
          <CardHeader>
            <CardTitle className="text-2xl font-bold text-slate-900">6. –ß—Ç–æ –º–µ—à–∞–µ—Ç –ª—é–¥—è–º –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤–∞–º?</CardTitle>
            <p className="text-slate-600">–ö–∞–∫–∏–µ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ —Å–æ–º–Ω–µ–Ω–∏—è –±—ã–≤–∞—é—Ç —É –∫–ª–∏–µ–Ω—Ç–æ–≤?</p>
            <p className="text-sm text-slate-500">‚úç –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´—Å–ª–∏—à–∫–æ–º –¥–æ—Ä–æ–≥–æ¬ª, ¬´–¥–æ–ª–≥–æ –¥–µ–ª–∞—é—Ç¬ª, ¬´–¥–∞–ª–µ–∫–æ –µ—Ö–∞—Ç—å¬ª):</p>
          </CardHeader>
          <CardContent>
            <Textarea
              name="clientObjections"
              value={formData.clientObjections}
              onChange={handleChange}
              placeholder="–û–ø–∏—à–∏—Ç–µ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤..."
              rows={4}
              required
            />
          </CardContent>
        </Card>

        {/* 7. –ì–µ–æ–≥—Ä–∞—Ñ–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ */}
        <Card className="shadow-lg border-t-4 border-cyan-500">
          <CardHeader>
            <CardTitle className="text-2xl font-bold text-slate-900">7. –û—Ç–∫—É–¥–∞ –ø—Ä–∏–µ–∑–∂–∞—é—Ç –∫–ª–∏–µ–Ω—Ç—ã?</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <RadioGroup
              name="clientGeography"
              value={formData.clientGeography}
              onValueChange={(value) => handleRadioChange("clientGeography", value)}
              className="flex flex-col space-y-2"
            >
              <div className="flex items-center space-x-2">
                <RadioGroupItem value="Only this district" id="geoDistrict" />
                <Label htmlFor="geoDistrict">–¢–æ–ª—å–∫–æ –∏–∑ —ç—Ç–æ–≥–æ —Ä–∞–π–æ–Ω–∞</Label>
              </div>
              <div className="flex items-center space-x-2">
                <RadioGroupItem value="Different districts" id="geoDifferent" />
                <Label htmlFor="geoDifferent">–ò–∑ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–π–æ–Ω–æ–≤ –≥–æ—Ä–æ–¥–∞</Label>
              </div>
              <div className="flex items-center space-x-2">
                <RadioGroupItem value="Neighboring cities" id="geoNeighboring" />
                <Label htmlFor="geoNeighboring">–ò–∑ —Å–æ—Å–µ–¥–Ω–∏—Ö –≥–æ—Ä–æ–¥–æ–≤</Label>
              </div>
              <div className="flex items-center space-x-2">
                <RadioGroupItem value="Other" id="geoOther" />
                <Label htmlFor="geoOther">–î—Ä—É–≥–æ–µ</Label>
              </div>
            </RadioGroup>
            {formData.clientGeography === "Other" && (
              <Input
                name="otherGeography"
                value={formData.otherGeography}
                onChange={handleChange}
                placeholder="–£–∫–∞–∂–∏—Ç–µ —á—Ç–æ –∏–º–µ–Ω–Ω–æ"
                className="mt-2"
              />
            )}
          </CardContent>
        </Card>

        {/* 8. –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã */}
        <Card className="shadow-lg border-t-4 border-indigo-500">
          <CardHeader>
            <CardTitle className="text-2xl font-bold text-slate-900">8. –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã</CardTitle>
            <p className="text-slate-600">–ö–∞–∫–∏–µ –µ—Å—Ç—å —É –≤–∞—Å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã (–Ω–∞–∑–≤–∞–Ω–∏—è —Å–∞–ª–æ–Ω–æ–≤ –∏–ª–∏ —Å—Å—ã–ª–∫–∏)?</p>
          </CardHeader>
          <CardContent>
            <Textarea
              name="competitors"
              value={formData.competitors}
              onChange={handleChange}
              placeholder="–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤..."
              rows={3}
            />
          </CardContent>
        </Card>

        {/* 9. –°—Ä–æ–∫–∏ –Ω–∞—á–∞–ª–∞ */}
        <Card className="shadow-lg border-t-4 border-yellow-500">
          <CardHeader>
            <CardTitle className="text-2xl font-bold text-slate-900">9. –ö–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É?</CardTitle>
            <p className="text-slate-600">–ö–æ–≥–¥–∞ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –Ω–∞–º–∏?</p>
            <p className="text-sm text-slate-500">‚úç –£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∏–ª–∏ –ø–µ—Ä–∏–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä: ¬´—Å—Ä–∞–∑—É¬ª, ¬´—á–µ—Ä–µ–∑ –º–µ—Å—è—Ü¬ª, ¬´—Å 1 –º–∞—Ä—Ç–∞¬ª):</p>
          </CardHeader>
          <CardContent>
            <Input
              name="startDate"
              value={formData.startDate}
              onChange={handleChange}
              placeholder="–ö–æ–≥–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –Ω–∞—á–∞—Ç—å?"
              required
            />
          </CardContent>
        </Card>

        {/* 10. –ë—é–¥–∂–µ—Ç */}
        <Card className="shadow-lg border-t-4 border-pink-500">
          <CardHeader>
            <CardTitle className="text-2xl font-bold text-slate-900">10. –ë—é–¥–∂–µ—Ç</CardTitle>
            <p className="text-slate-600">–ö–∞–∫–æ–π –±—é–¥–∂–µ—Ç –Ω–∞ —Ä–µ–∫–ª–∞–º—É –≤—ã –≥–æ—Ç–æ–≤—ã –≤—ã–¥–µ–ª—è—Ç—å –≤ –º–µ—Å—è—Ü?</p>
          </CardHeader>
          <CardContent>
            <Input
              name="budget"
              value={formData.budget}
              onChange={handleChange}
              placeholder="–£–∫–∞–∂–∏—Ç–µ –±—é–¥–∂–µ—Ç –≤ –º–µ—Å—è—Ü"
              required
            />
          </CardContent>
        </Card>

        {/* 11. –Ø–∑—ã–∫ —Ä–µ–∫–ª–∞–º—ã */}
        <Card className="shadow-lg border-t-4 border-teal-500">
          <CardHeader>
            <CardTitle className="text-2xl font-bold text-slate-900">11. –Ø–∑—ã–∫ —Ä–µ–∫–ª–∞–º—ã –∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <RadioGroup
              name="advertisingLanguage"
              value={formData.advertisingLanguage}
              onValueChange={(value) => handleRadioChange("advertisingLanguage", value)}
              className="flex flex-col space-y-2"
            >
              <div className="flex items-center space-x-2">
                <RadioGroupItem value="Only Polish" id="langPolish" />
                <Label htmlFor="langPolish">–¢–æ–ª—å–∫–æ –ø–æ–ª—å—Å–∫–∏–π</Label>
              </div>
              <div className="flex items-center space-x-2">
                <RadioGroupItem value="Polish + English" id="langPolishEnglish" />
                <Label htmlFor="langPolishEnglish">–ü–æ–ª—å—Å–∫–∏–π + –∞–Ω–≥–ª–∏–π—Å–∫–∏–π</Label>
              </div>
              <div className="flex items-center space-x-2">
                <RadioGroupItem value="Polish + Russian/Ukrainian" id="langPolishRussian" />
                <Label htmlFor="langPolishRussian">–ü–æ–ª—å—Å–∫–∏–π + —Ä—É—Å—Å–∫–∏–π/—É–∫—Ä–∞–∏–Ω—Å–∫–∏–π (–¥–ª—è —ç–º–∏–≥—Ä–∞–Ω—Ç–æ–≤)</Label>
              </div>
              <div className="flex items-center space-x-2">
                <RadioGroupItem value="Other" id="langOther" />
                <Label htmlFor="langOther">–î—Ä—É–≥–æ–µ</Label>
              </div>
            </RadioGroup>
            {formData.advertisingLanguage === "Other" && (
              <Input
                name="otherLanguage"
                value={formData.otherLanguage}
                onChange={handleChange}
                placeholder="–£–∫–∞–∂–∏—Ç–µ —á—Ç–æ –∏–º–µ–Ω–Ω–æ"
                className="mt-2"
              />
            )}
          </CardContent>
        </Card>

        {/* 12. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ */}
        <Card className="shadow-lg border-t-4 border-violet-500">
          <CardHeader>
            <CardTitle className="text-2xl font-bold text-slate-900">12. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</CardTitle>
            <p className="text-slate-600">–ö–∞–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ –∏–ª–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å –≤ —Ä–µ–∫–ª–∞–º–µ?</p>
          </CardHeader>
          <CardContent>
            <Textarea
              name="additionalInfo"
              value={formData.additionalInfo}
              onChange={handleChange}
              placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è..."
              rows={4}
            />
          </CardContent>
        </Card>

        <Button
          type="submit"
          className={cn(
            "w-full py-4 text-lg font-semibold rounded-xl transition-all duration-300",
            isSubmitting
              ? "bg-gray-400 cursor-not-allowed"
              : "bg-amber-500 text-white hover:bg-amber-600 shadow-lg hover:shadow-amber-500/25",
          )}
          disabled={isSubmitting}
        >
          {isSubmitting ? (
            <>
              <Loader2 className="mr-2 h-5 w-5 animate-spin" />
              –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±—Ä–∏—Ñ...
            </>
          ) : (
            <>
              <Upload className="mr-2 h-5 w-5" />
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –±—Ä–∏—Ñ
            </>
          )}
        </Button>
      </form>
    </div>
  )
}
