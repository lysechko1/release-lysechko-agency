import { NextRequest, NextResponse } from "next/server"

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async function sendTelegramMessage(message: string) {
  const botToken = process.env.TELEGRAM_BOT_TOKEN
  const chatId = process.env.TELEGRAM_CHAT_ID
  
  if (!botToken || !chatId) {
    console.warn("Telegram credentials not configured")
    return
  }

  try {
    const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: "HTML",
      }),
    })

    if (!response.ok) {
      console.error("Failed to send Telegram message:", response.statusText)
    }
  } catch (error) {
    console.error("Error sending Telegram message:", error)
  }
}

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    const requiredFields = ["contactName", "contactPhone"]
    for (const field of requiredFields) {
      if (!body[field] || body[field].trim() === "") {
        return NextResponse.json(
          { error: `–ü–æ–ª–µ ${field} –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è` },
          { status: 400 }
        )
      }
    }

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
    const telegramMessage = `
<b>üìã –ù–æ–≤—ã–π –±—Ä–∏—Ñ –Ω–∞ –∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ–≤–æ—Ä–æ–Ω–∫–∏ –≤ Telegram —á–µ—Ä–µ–∑ Leeloo.ai</b>

<b>üë§ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>
<b>–ò–º—è:</b> ${body.contactName}
<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${body.contactPhone}
${body.contactEmail ? `<b>Email:</b> ${body.contactEmail}` : ''}

<b>1. üì¶ –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ —Ü–µ–ª–µ–π</b>
<b>–ü—Ä–æ–¥—É–∫—Ç—ã:</b> ${body.products?.join(", ") || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
${body.otherProduct ? `<b>–î—Ä—É–≥–æ–π –ø—Ä–æ–¥—É–∫—Ç:</b> ${body.otherProduct}` : ''}
<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ—Ä–æ–Ω–æ–∫:</b> ${body.funnelCount || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
<b>–ö–ª—é—á–µ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</b> ${body.keyActions?.join(", ") || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
${body.otherAction ? `<b>–î—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b> ${body.otherAction}` : ''}

<b>2. üéØ –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è –∏ —Å–µ–≥–º–µ–Ω—Ç—ã</b>
<b>–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è:</b> ${body.targetAudience || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
<b>–†–∞–∑–Ω—ã–µ —Ü–µ–ø–æ—á–∫–∏:</b> ${body.differentChains || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
${body.audienceSegments ? `<b>–°–µ–≥–º–µ–Ω—Ç—ã –∞—É–¥–∏—Ç–æ—Ä–∏–∏:</b> ${body.audienceSegments}` : ''}
<b>–Ø–∑—ã–∫ –±–æ—Ç–∞:</b> ${body.botLanguage || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
${body.otherLanguage ? `<b>–î—Ä—É–≥–æ–π —è–∑—ã–∫:</b> ${body.otherLanguage}` : ''}

<b>3. üìù –ö–æ–Ω—Ç–µ–Ω—Ç –∏ —Å—Ü–µ–Ω–∞—Ä–∏–∏</b>
<b>–ì–æ—Ç–æ–≤—ã–µ —Ç–µ–∫—Å—Ç—ã:</b> ${body.readyTexts || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
<b>–¢–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π:</b> ${body.messageTypes?.join(", ") || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
${body.otherMessageType ? `<b>–î—Ä—É–≥–æ–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è:</b> ${body.otherMessageType}` : ''}
<b>–ú–µ–¥–∏–∞–∫–æ–Ω—Ç–µ–Ω—Ç:</b> ${body.mediaContent || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
${body.mediaScenario ? `<b>–°—Ü–µ–Ω–∞—Ä–∏–π –º–µ–¥–∏–∞:</b> ${body.mediaScenario}` : ''}

<b>4. üí≥ –û–ø–ª–∞—Ç–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è</b>
<b>–¢–µ–∫—É—â–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:</b> ${body.currentPayments || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
<b>–û–ø–ª–∞—Ç–∞ –≤ Leeloo.ai:</b> ${body.leelooPayment || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
<b>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã:</b> ${body.afterPayment || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
${body.otherAfterPayment ? `<b>–î—Ä—É–≥–æ–µ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã:</b> ${body.otherAfterPayment}` : ''}

<b>5. üöÄ –î–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏</b>
<b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:</b> ${body.additionalMessages || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
<b>–ü—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –¥–æ–ø—Ä–æ–¥–∞–∂–∏:</b> ${body.upsellProducts || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
<b>–†–∞—Å—Å—ã–ª–∫–∞:</b> ${body.newsletter || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}

<b>6. üé® –í–∏–∑—É–∞–ª –∏ —Ñ–∏—Ä–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å</b>
<b>–§–∏—Ä–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å:</b> ${body.brandStyle || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
<b>–ú–∏–Ω–∏-–ª–µ–Ω–¥–∏–Ω–≥–∏:</b> ${body.miniLandings || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
<b>–í–∏–∑—É–∞–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:</b> ${body.visualMaterials || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}

<b>7. ‚è∞ –°—Ä–æ–∫–∏, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –±—é–¥–∂–µ—Ç</b>
<b>–î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞:</b> ${body.launchDate || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
<b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞:</b> ${body.technicalSupport || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}

<em>–ë—Ä–∏—Ñ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å —Å–∞–π—Ç–∞ Lysechko Agency
–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${new Date().toLocaleString("ru-RU")}</em>
    `

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
    await sendTelegramMessage(telegramMessage)

    return NextResponse.json({ success: true })
  } catch (error) {
    console.error("Error sending telegram funnel brief:", error)
    return NextResponse.json(
      { error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" },
      { status: 500 }
    )
  }
}
